{
    "cells": [
        {
            "cell_type": "code",
            "execution_count": null,
            "metadata": {
                "colab": {
                    "base_uri": "https://localhost:8080/"
                },
                "id": "g_pGBx2_1mkU",
                "outputId": "0352dd90-9464-439e-f681-6f899c8c6cbf"
            },
            "outputs": [
                {
                    "name": "stdout",
                    "output_type": "stream",
                    "text": "/content\n"
                }
            ],
            "source": "import os\nHOME = os.getcwd()\nprint(HOME)"
        },
        {
            "cell_type": "code",
            "execution_count": null,
            "metadata": {
                "colab": {
                    "base_uri": "https://localhost:8080/"
                },
                "id": "7fk1HpsK18AC",
                "outputId": "7901802d-f23e-40bd-d5a7-f63b39931848"
            },
            "outputs": [
                {
                    "name": "stdout",
                    "output_type": "stream",
                    "text": "Requirement already satisfied: ultralytics in /usr/local/lib/python3.12/dist-packages (8.3.192)\nRequirement already satisfied: numpy>=1.23.0 in /usr/local/lib/python3.12/dist-packages (from ultralytics) (2.0.2)\nRequirement already satisfied: matplotlib>=3.3.0 in /usr/local/lib/python3.12/dist-packages (from ultralytics) (3.10.0)\nRequirement already satisfied: opencv-python>=4.6.0 in /usr/local/lib/python3.12/dist-packages (from ultralytics) (4.12.0.88)\nRequirement already satisfied: pillow>=7.1.2 in /usr/local/lib/python3.12/dist-packages (from ultralytics) (11.3.0)\nRequirement already satisfied: pyyaml>=5.3.1 in /usr/local/lib/python3.12/dist-packages (from ultralytics) (6.0.2)\nRequirement already satisfied: requests>=2.23.0 in /usr/local/lib/python3.12/dist-packages (from ultralytics) (2.32.4)\nRequirement already satisfied: scipy>=1.4.1 in /usr/local/lib/python3.12/dist-packages (from ultralytics) (1.16.1)\nRequirement already satisfied: torch>=1.8.0 in /usr/local/lib/python3.12/dist-packages (from ultralytics) (2.8.0+cu126)\nRequirement already satisfied: torchvision>=0.9.0 in /usr/local/lib/python3.12/dist-packages (from ultralytics) (0.23.0+cu126)\nRequirement already satisfied: psutil in /usr/local/lib/python3.12/dist-packages (from ultralytics) (5.9.5)\nRequirement already satisfied: py-cpuinfo in /usr/local/lib/python3.12/dist-packages (from ultralytics) (9.0.0)\nRequirement already satisfied: polars in /usr/local/lib/python3.12/dist-packages (from ultralytics) (1.25.2)\nRequirement already satisfied: ultralytics-thop>=2.0.0 in /usr/local/lib/python3.12/dist-packages (from ultralytics) (2.0.17)\nRequirement already satisfied: contourpy>=1.0.1 in /usr/local/lib/python3.12/dist-packages (from matplotlib>=3.3.0->ultralytics) (1.3.3)\nRequirement already satisfied: cycler>=0.10 in /usr/local/lib/python3.12/dist-packages (from matplotlib>=3.3.0->ultralytics) (0.12.1)\nRequirement already satisfied: fonttools>=4.22.0 in /usr/local/lib/python3.12/dist-packages (from matplotlib>=3.3.0->ultralytics) (4.59.1)\nRequirement already satisfied: kiwisolver>=1.3.1 in /usr/local/lib/python3.12/dist-packages (from matplotlib>=3.3.0->ultralytics) (1.4.9)\nRequirement already satisfied: packaging>=20.0 in /usr/local/lib/python3.12/dist-packages (from matplotlib>=3.3.0->ultralytics) (25.0)\nRequirement already satisfied: pyparsing>=2.3.1 in /usr/local/lib/python3.12/dist-packages (from matplotlib>=3.3.0->ultralytics) (3.2.3)\nRequirement already satisfied: python-dateutil>=2.7 in /usr/local/lib/python3.12/dist-packages (from matplotlib>=3.3.0->ultralytics) (2.9.0.post0)\nRequirement already satisfied: charset_normalizer<4,>=2 in /usr/local/lib/python3.12/dist-packages (from requests>=2.23.0->ultralytics) (3.4.3)\nRequirement already satisfied: idna<4,>=2.5 in /usr/local/lib/python3.12/dist-packages (from requests>=2.23.0->ultralytics) (3.7)\nRequirement already satisfied: urllib3<3,>=1.21.1 in /usr/local/lib/python3.12/dist-packages (from requests>=2.23.0->ultralytics) (2.5.0)\nRequirement already satisfied: certifi>=2017.4.17 in /usr/local/lib/python3.12/dist-packages (from requests>=2.23.0->ultralytics) (2025.8.3)\nRequirement already satisfied: filelock in /usr/local/lib/python3.12/dist-packages (from torch>=1.8.0->ultralytics) (3.19.1)\nRequirement already satisfied: typing-extensions>=4.10.0 in /usr/local/lib/python3.12/dist-packages (from torch>=1.8.0->ultralytics) (4.15.0)\nRequirement already satisfied: setuptools in /usr/local/lib/python3.12/dist-packages (from torch>=1.8.0->ultralytics) (75.2.0)\nRequirement already satisfied: sympy>=1.13.3 in /usr/local/lib/python3.12/dist-packages (from torch>=1.8.0->ultralytics) (1.13.3)\nRequirement already satisfied: networkx in /usr/local/lib/python3.12/dist-packages (from torch>=1.8.0->ultralytics) (3.5)\nRequirement already satisfied: jinja2 in /usr/local/lib/python3.12/dist-packages (from torch>=1.8.0->ultralytics) (3.1.6)\nRequirement already satisfied: fsspec in /usr/local/lib/python3.12/dist-packages (from torch>=1.8.0->ultralytics) (2025.3.0)\nRequirement already satisfied: nvidia-cuda-nvrtc-cu12==12.6.77 in /usr/local/lib/python3.12/dist-packages (from torch>=1.8.0->ultralytics) (12.6.77)\nRequirement already satisfied: nvidia-cuda-runtime-cu12==12.6.77 in /usr/local/lib/python3.12/dist-packages (from torch>=1.8.0->ultralytics) (12.6.77)\nRequirement already satisfied: nvidia-cuda-cupti-cu12==12.6.80 in /usr/local/lib/python3.12/dist-packages (from torch>=1.8.0->ultralytics) (12.6.80)\nRequirement already satisfied: nvidia-cudnn-cu12==9.10.2.21 in /usr/local/lib/python3.12/dist-packages (from torch>=1.8.0->ultralytics) (9.10.2.21)\nRequirement already satisfied: nvidia-cublas-cu12==12.6.4.1 in /usr/local/lib/python3.12/dist-packages (from torch>=1.8.0->ultralytics) (12.6.4.1)\nRequirement already satisfied: nvidia-cufft-cu12==11.3.0.4 in /usr/local/lib/python3.12/dist-packages (from torch>=1.8.0->ultralytics) (11.3.0.4)\nRequirement already satisfied: nvidia-curand-cu12==10.3.7.77 in /usr/local/lib/python3.12/dist-packages (from torch>=1.8.0->ultralytics) (10.3.7.77)\nRequirement already satisfied: nvidia-cusolver-cu12==11.7.1.2 in /usr/local/lib/python3.12/dist-packages (from torch>=1.8.0->ultralytics) (11.7.1.2)\nRequirement already satisfied: nvidia-cusparse-cu12==12.5.4.2 in /usr/local/lib/python3.12/dist-packages (from torch>=1.8.0->ultralytics) (12.5.4.2)\nRequirement already satisfied: nvidia-cusparselt-cu12==0.7.1 in /usr/local/lib/python3.12/dist-packages (from torch>=1.8.0->ultralytics) (0.7.1)\nRequirement already satisfied: nvidia-nccl-cu12==2.27.3 in /usr/local/lib/python3.12/dist-packages (from torch>=1.8.0->ultralytics) (2.27.3)\nRequirement already satisfied: nvidia-nvtx-cu12==12.6.77 in /usr/local/lib/python3.12/dist-packages (from torch>=1.8.0->ultralytics) (12.6.77)\nRequirement already satisfied: nvidia-nvjitlink-cu12==12.6.85 in /usr/local/lib/python3.12/dist-packages (from torch>=1.8.0->ultralytics) (12.6.85)\nRequirement already satisfied: nvidia-cufile-cu12==1.11.1.6 in /usr/local/lib/python3.12/dist-packages (from torch>=1.8.0->ultralytics) (1.11.1.6)\nRequirement already satisfied: triton==3.4.0 in /usr/local/lib/python3.12/dist-packages (from torch>=1.8.0->ultralytics) (3.4.0)\nRequirement already satisfied: six>=1.5 in /usr/local/lib/python3.12/dist-packages (from python-dateutil>=2.7->matplotlib>=3.3.0->ultralytics) (1.17.0)\nRequirement already satisfied: mpmath<1.4,>=1.1.0 in /usr/local/lib/python3.12/dist-packages (from sympy>=1.13.3->torch>=1.8.0->ultralytics) (1.3.0)\nRequirement already satisfied: MarkupSafe>=2.0 in /usr/local/lib/python3.12/dist-packages (from jinja2->torch>=1.8.0->ultralytics) (3.0.2)\n"
                }
            ],
            "source": "!pip install ultralytics"
        },
        {
            "cell_type": "code",
            "execution_count": null,
            "metadata": {
                "colab": {
                    "base_uri": "https://localhost:8080/"
                },
                "id": "YYiAK7W51_pR",
                "outputId": "4d4bcfe4-7487-4a6e-b93e-381f371c731b"
            },
            "outputs": [
                {
                    "name": "stdout",
                    "output_type": "stream",
                    "text": "Ultralytics 8.3.192 \ud83d\ude80 Python-3.12.11 torch-2.8.0+cu126 CUDA:0 (Tesla T4, 15095MiB)\nSetup complete \u2705 (2 CPUs, 12.7 GB RAM, 39.5/112.6 GB disk)\n"
                }
            ],
            "source": "from IPython import display\ndisplay.clear_output()\n\nimport ultralytics\nultralytics.checks()"
        },
        {
            "cell_type": "code",
            "execution_count": null,
            "metadata": {
                "colab": {
                    "base_uri": "https://localhost:8080/"
                },
                "id": "gVYPtN3x2G8D",
                "outputId": "8fa0d523-08de-41a4-f34f-71c940aef1dd"
            },
            "outputs": [
                {
                    "name": "stdout",
                    "output_type": "stream",
                    "text": "0.1.0\n"
                }
            ],
            "source": "%cd {HOME}\n!git clone https://github.com/ifzhang/ByteTrack.git\n!cd ByteTrack && pip3 install -q -r requirements.txt\n!cd ByteTrack && python3 setup.py -q develop\n!pip install -q cython_bbox\n!pip install -q onemetric\n\nfrom IPython import display\ndisplay.clear_output()\n\n!pip install -q loguru\n\nimport sys\nHOME = '/content'\nsys.path.append(f\"{HOME}/ByteTrack\")\n\nimport yolox\nprint(yolox.__version__)"
        },
        {
            "cell_type": "code",
            "execution_count": null,
            "metadata": {
                "colab": {
                    "background_save": true,
                    "base_uri": "https://localhost:8080/"
                },
                "id": "kdM_PUG42Nxw",
                "outputId": "46dbb1d8-ba9e-44b5-f01e-06e8aaf829bf"
            },
            "outputs": [
                {
                    "name": "stdout",
                    "output_type": "stream",
                    "text": "Requirement already satisfied: lap in /usr/local/lib/python3.12/dist-packages (0.5.12)\nRequirement already satisfied: numpy>=1.21.6 in /usr/local/lib/python3.12/dist-packages (from lap) (2.0.2)\n"
                }
            ],
            "source": "!pip install lap"
        },
        {
            "cell_type": "code",
            "execution_count": null,
            "metadata": {
                "id": "jR5EOBI42s_Q"
            },
            "outputs": [],
            "source": "from yolox.tracker.byte_tracker import BYTETracker,STrack\nfrom onemetric.cv.utils.iou import box_iou_batch\nfrom dataclasses import dataclass\n\n@dataclass(frozen = True)\nclass BYTETrackerArgs:\n  track_thresh: float = 0.25\n  track_buffer: int = 10\n  match_thresh: float = 0.8\n  aspect_ratio_thresh: float = 3.0\n  min_box_area: float = 1.0\n  mot20: bool = False"
        },
        {
            "cell_type": "code",
            "execution_count": null,
            "metadata": {
                "colab": {
                    "base_uri": "https://localhost:8080/"
                },
                "id": "nbgxOUd62wEC",
                "outputId": "4d70c6a5-1a25-4de2-c94b-990413523c15"
            },
            "outputs": [
                {
                    "name": "stdout",
                    "output_type": "stream",
                    "text": "0.1.0\n"
                }
            ],
            "source": "!pip install supervision==0.1.0\n\nfrom IPython import display\ndisplay.clear_output()\n\nimport supervision\nprint(supervision.__version__)"
        },
        {
            "cell_type": "code",
            "execution_count": null,
            "metadata": {
                "colab": {
                    "base_uri": "https://localhost:8080/"
                },
                "id": "7Ufoboaj36F7",
                "outputId": "c059711a-409c-4146-ee39-3086d6b55815"
            },
            "outputs": [
                {
                    "name": "stdout",
                    "output_type": "stream",
                    "text": "/content\nRequirement already satisfied: roboflow in /usr/local/lib/python3.12/dist-packages (1.2.7)\nRequirement already satisfied: certifi in /usr/local/lib/python3.12/dist-packages (from roboflow) (2025.8.3)\nRequirement already satisfied: idna==3.7 in /usr/local/lib/python3.12/dist-packages (from roboflow) (3.7)\nRequirement already satisfied: cycler in /usr/local/lib/python3.12/dist-packages (from roboflow) (0.12.1)\nRequirement already satisfied: kiwisolver>=1.3.1 in /usr/local/lib/python3.12/dist-packages (from roboflow) (1.4.9)\nRequirement already satisfied: matplotlib in /usr/local/lib/python3.12/dist-packages (from roboflow) (3.10.0)\nRequirement already satisfied: numpy>=1.18.5 in /usr/local/lib/python3.12/dist-packages (from roboflow) (2.0.2)\nRequirement already satisfied: opencv-python-headless==4.10.0.84 in /usr/local/lib/python3.12/dist-packages (from roboflow) (4.10.0.84)\nRequirement already satisfied: Pillow>=7.1.2 in /usr/local/lib/python3.12/dist-packages (from roboflow) (11.3.0)\nRequirement already satisfied: pi-heif<2 in /usr/local/lib/python3.12/dist-packages (from roboflow) (1.1.0)\nRequirement already satisfied: pillow-avif-plugin<2 in /usr/local/lib/python3.12/dist-packages (from roboflow) (1.5.2)\nRequirement already satisfied: python-dateutil in /usr/local/lib/python3.12/dist-packages (from roboflow) (2.9.0.post0)\nRequirement already satisfied: python-dotenv in /usr/local/lib/python3.12/dist-packages (from roboflow) (1.1.1)\nRequirement already satisfied: requests in /usr/local/lib/python3.12/dist-packages (from roboflow) (2.32.4)\nRequirement already satisfied: six in /usr/local/lib/python3.12/dist-packages (from roboflow) (1.17.0)\nRequirement already satisfied: urllib3>=1.26.6 in /usr/local/lib/python3.12/dist-packages (from roboflow) (2.5.0)\nRequirement already satisfied: tqdm>=4.41.0 in /usr/local/lib/python3.12/dist-packages (from roboflow) (4.67.1)\nRequirement already satisfied: PyYAML>=5.3.1 in /usr/local/lib/python3.12/dist-packages (from roboflow) (6.0.2)\nRequirement already satisfied: requests-toolbelt in /usr/local/lib/python3.12/dist-packages (from roboflow) (1.0.0)\nRequirement already satisfied: filetype in /usr/local/lib/python3.12/dist-packages (from roboflow) (1.2.0)\nRequirement already satisfied: contourpy>=1.0.1 in /usr/local/lib/python3.12/dist-packages (from matplotlib->roboflow) (1.3.3)\nRequirement already satisfied: fonttools>=4.22.0 in /usr/local/lib/python3.12/dist-packages (from matplotlib->roboflow) (4.59.1)\nRequirement already satisfied: packaging>=20.0 in /usr/local/lib/python3.12/dist-packages (from matplotlib->roboflow) (25.0)\nRequirement already satisfied: pyparsing>=2.3.1 in /usr/local/lib/python3.12/dist-packages (from matplotlib->roboflow) (3.2.3)\nRequirement already satisfied: charset_normalizer<4,>=2 in /usr/local/lib/python3.12/dist-packages (from requests->roboflow) (3.4.3)\nloading Roboflow workspace...\nloading Roboflow project...\n"
                }
            ],
            "source": "%cd {HOME}\n!pip install roboflow\n\nfrom roboflow import Roboflow\nrf = Roboflow(api_key=\"001O2LJYBVj91zvlH2u9\")\nproject = rf.workspace(\"alpaca-u9b8a\").project(\"microorganisms-5z8ym\")\nversion = project.version(2)\ndataset = version.download(\"yolov8-obb\")\n"
        },
        {
            "cell_type": "code",
            "execution_count": null,
            "metadata": {
                "id": "UFjgqaPsxd6n"
            },
            "outputs": [],
            "source": ""
        },
        {
            "cell_type": "code",
            "execution_count": null,
            "metadata": {
                "id": "mKTlH7JCx3O4"
            },
            "outputs": [],
            "source": ""
        },
        {
            "cell_type": "markdown",
            "metadata": {
                "id": "EYc_L_0B20Wy"
            },
            "source": "#Loading Pretrained YOLOv8 Model"
        },
        {
            "cell_type": "code",
            "execution_count": null,
            "metadata": {
                "id": "Yx4aQnib26LZ"
            },
            "outputs": [],
            "source": "# Model = 'yolov8n.pt'"
        },
        {
            "cell_type": "code",
            "execution_count": null,
            "metadata": {
                "id": "XOwt_CED27og"
            },
            "outputs": [],
            "source": "from ultralytics import YOLO\n\n# model = YOLO(Model)\n# model.fuse()"
        },
        {
            "cell_type": "code",
            "execution_count": null,
            "metadata": {
                "colab": {
                    "base_uri": "https://localhost:8080/"
                },
                "id": "Q8j2OZ7K4_kL",
                "outputId": "5eff825c-ed74-4cec-ed9b-3b079a00394a"
            },
            "outputs": [
                {
                    "name": "stdout",
                    "output_type": "stream",
                    "text": "/content\n\u001b[KDownloading https://github.com/ultralytics/assets/releases/download/v8.3.0/yolov8m.pt to 'yolov8m.pt': 100% \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 49.7/49.7MB 245.0MB/s 0.2s\nUltralytics 8.3.192 \ud83d\ude80 Python-3.12.11 torch-2.8.0+cu126 CUDA:0 (Tesla T4, 15095MiB)\n\u001b[34m\u001b[1mengine/trainer: \u001b[0magnostic_nms=False, amp=True, augment=False, auto_augment=randaugment, batch=16, bgr=0.0, box=7.5, cache=False, cfg=None, classes=None, close_mosaic=10, cls=0.5, conf=None, copy_paste=0.0, copy_paste_mode=flip, cos_lr=False, cutmix=0.0, data=/content/microorganisms-2/data.yaml, degrees=0.0, deterministic=True, device=None, dfl=1.5, dnn=False, dropout=0.0, dynamic=False, embed=None, epochs=100, erasing=0.4, exist_ok=False, fliplr=0.5, flipud=0.0, format=torchscript, fraction=1.0, freeze=None, half=False, hsv_h=0.015, hsv_s=0.7, hsv_v=0.4, imgsz=224, int8=False, iou=0.7, keras=False, kobj=1.0, line_width=None, lr0=0.01, lrf=0.01, mask_ratio=4, max_det=300, mixup=0.0, mode=train, model=yolov8m.pt, momentum=0.937, mosaic=1.0, multi_scale=False, name=train, nbs=64, nms=False, opset=None, optimize=False, optimizer=auto, overlap_mask=True, patience=100, perspective=0.0, plots=True, pose=12.0, pretrained=True, profile=False, project=None, rect=False, resume=False, retina_masks=False, save=True, save_conf=False, save_crop=False, save_dir=runs/detect/train, save_frames=False, save_json=False, save_period=-1, save_txt=False, scale=0.5, seed=0, shear=0.0, show=False, show_boxes=True, show_conf=True, show_labels=True, simplify=True, single_cls=False, source=None, split=val, stream_buffer=False, task=detect, time=None, tracker=botsort.yaml, translate=0.1, val=True, verbose=True, vid_stride=1, visualize=False, warmup_bias_lr=0.1, warmup_epochs=3.0, warmup_momentum=0.8, weight_decay=0.0005, workers=8, workspace=None\n\u001b[KDownloading https://ultralytics.com/assets/Arial.ttf to '/root/.config/Ultralytics/Arial.ttf': 100% \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 755.1/755.1KB 20.8MB/s 0.0s\nOverriding model.yaml nc=80 with nc=45\n\n                   from  n    params  module                                       arguments                     \n  0                  -1  1      1392  ultralytics.nn.modules.conv.Conv             [3, 48, 3, 2]                 \n  1                  -1  1     41664  ultralytics.nn.modules.conv.Conv             [48, 96, 3, 2]                \n  2                  -1  2    111360  ultralytics.nn.modules.block.C2f             [96, 96, 2, True]             \n  3                  -1  1    166272  ultralytics.nn.modules.conv.Conv             [96, 192, 3, 2]               \n  4                  -1  4    813312  ultralytics.nn.modules.block.C2f             [192, 192, 4, True]           \n  5                  -1  1    664320  ultralytics.nn.modules.conv.Conv             [192, 384, 3, 2]              \n  6                  -1  4   3248640  ultralytics.nn.modules.block.C2f             [384, 384, 4, True]           \n  7                  -1  1   1991808  ultralytics.nn.modules.conv.Conv             [384, 576, 3, 2]              \n  8                  -1  2   3985920  ultralytics.nn.modules.block.C2f             [576, 576, 2, True]           \n  9                  -1  1    831168  ultralytics.nn.modules.block.SPPF            [576, 576, 5]                 \n 10                  -1  1         0  torch.nn.modules.upsampling.Upsample         [None, 2, 'nearest']          \n 11             [-1, 6]  1         0  ultralytics.nn.modules.conv.Concat           [1]                           \n 12                  -1  2   1993728  ultralytics.nn.modules.block.C2f             [960, 384, 2]                 \n 13                  -1  1         0  torch.nn.modules.upsampling.Upsample         [None, 2, 'nearest']          \n 14             [-1, 4]  1         0  ultralytics.nn.modules.conv.Concat           [1]                           \n 15                  -1  2    517632  ultralytics.nn.modules.block.C2f             [576, 192, 2]                 \n 16                  -1  1    332160  ultralytics.nn.modules.conv.Conv             [192, 192, 3, 2]              \n 17            [-1, 12]  1         0  ultralytics.nn.modules.conv.Concat           [1]                           \n 18                  -1  2   1846272  ultralytics.nn.modules.block.C2f             [576, 384, 2]                 \n 19                  -1  1   1327872  ultralytics.nn.modules.conv.Conv             [384, 384, 3, 2]              \n 20             [-1, 9]  1         0  ultralytics.nn.modules.conv.Concat           [1]                           \n 21                  -1  2   4207104  ultralytics.nn.modules.block.C2f             [960, 576, 2]                 \n 22        [15, 18, 21]  1   3801751  ultralytics.nn.modules.head.Detect           [45, [192, 384, 576]]         \nModel summary: 169 layers, 25,882,375 parameters, 25,882,359 gradients, 79.2 GFLOPs\n\nTransferred 469/475 items from pretrained weights\nFreezing layer 'model.22.dfl.conv.weight'\n\u001b[34m\u001b[1mAMP: \u001b[0mrunning Automatic Mixed Precision (AMP) checks...\n\u001b[KDownloading https://github.com/ultralytics/assets/releases/download/v8.3.0/yolo11n.pt to 'yolo11n.pt': 100% \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 5.4/5.4MB 93.1MB/s 0.1s\n\u001b[34m\u001b[1mAMP: \u001b[0mchecks passed \u2705\n\u001b[34m\u001b[1mtrain: \u001b[0mFast image access \u2705 (ping: 0.0\u00b10.0 ms, read: 158.9\u00b196.8 MB/s, size: 3.7 KB)\n\u001b[K\u001b[34m\u001b[1mtrain: \u001b[0mScanning /content/microorganisms-2/train/labels... 706 images, 0 backgrounds, 34 corrupt: 100% \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 706/706 2154.2it/s 0.3s\n\u001b[34m\u001b[1mtrain: \u001b[0m/content/microorganisms-2/train/images/Amoeba_jpg.rf.7f74dee0bdea27df048810dda746d220.jpg: ignoring corrupt image/label: non-normalized or out of bounds coordinates [     1.3348      1.2858]\n\u001b[34m\u001b[1mtrain: \u001b[0m/content/microorganisms-2/train/images/Amoeba_jpg.rf.9518811cae765f21648d544768da835c.jpg: ignoring corrupt image/label: non-normalized or out of bounds coordinates [     1.3433      1.2839]\n\u001b[34m\u001b[1mtrain: \u001b[0m/content/microorganisms-2/train/images/Amphipod_300_jpg.rf.1dce8cd0e41b40ab0e5b041f76b6c08f.jpg: ignoring corrupt image/label: non-normalized or out of bounds coordinates [      1.158      1.1921]\n\u001b[34m\u001b[1mtrain: \u001b[0m/content/microorganisms-2/train/images/Amphipod_300_jpg.rf.458483a8ad6a36279f92da25748b999d.jpg: ignoring corrupt image/label: non-normalized or out of bounds coordinates [     1.2137      1.2469]\n\u001b[34m\u001b[1mtrain: \u001b[0m/content/microorganisms-2/train/images/Amphipod_300_jpg.rf.dcf885e63c7d1abfdd67be24e698bab5.jpg: ignoring corrupt image/label: non-normalized or out of bounds coordinates [      1.158      1.1921]\n\u001b[34m\u001b[1mtrain: \u001b[0m/content/microorganisms-2/train/images/Daphnia_300_jpg.rf.5a8ef1572466baf8f2d359f051744232.jpg: ignoring corrupt image/label: non-normalized or out of bounds coordinates [     1.2147]\n\u001b[34m\u001b[1mtrain: \u001b[0m/content/microorganisms-2/train/images/Daphnia_300_jpg.rf.e66c5c2cedf4261b29fcbc7e7eefb54d.jpg: ignoring corrupt image/label: non-normalized or out of bounds coordinates [     1.2101]\n\u001b[34m\u001b[1mtrain: \u001b[0m/content/microorganisms-2/train/images/Desmidium_jpg.rf.296f0c9387ed1fcf42c60d0d4d1e6a9b.jpg: ignoring corrupt image/label: non-normalized or out of bounds coordinates [     1.1986       1.149]\n\u001b[34m\u001b[1mtrain: \u001b[0m/content/microorganisms-2/train/images/Desmidium_jpg.rf.46237e55068de9ece7706daa923d8279.jpg: ignoring corrupt image/label: non-normalized or out of bounds coordinates [     1.1995      1.1447]\n\u001b[34m\u001b[1mtrain: \u001b[0m/content/microorganisms-2/train/images/Didinium_300_jpg.rf.4c150503b6cd11beb80aef1459da0e95.jpg: ignoring corrupt image/label: non-normalized or out of bounds coordinates [      1.328      1.3314]\n\u001b[34m\u001b[1mtrain: \u001b[0m/content/microorganisms-2/train/images/Didinium_300_jpg.rf.b504eb23948f668b44de6f614e33a9b3.jpg: ignoring corrupt image/label: non-normalized or out of bounds coordinates [      1.328      1.3314]\n\u001b[34m\u001b[1mtrain: \u001b[0m/content/microorganisms-2/train/images/Heliozoa_jpg.rf.20018673693f9bd7745b7fbeded047b5.jpg: ignoring corrupt image/label: non-normalized or out of bounds coordinates [     1.0504       1.066]\n\u001b[34m\u001b[1mtrain: \u001b[0m/content/microorganisms-2/train/images/Heliozoa_jpg.rf.6791071fa8ca83207a67b4b688710160.jpg: ignoring corrupt image/label: non-normalized or out of bounds coordinates [     1.0432      1.0568]\n\u001b[34m\u001b[1mtrain: \u001b[0m/content/microorganisms-2/train/images/Heliozoa_jpg.rf.7ed114434635abecf6da078fcaefc656.jpg: ignoring corrupt image/label: non-normalized or out of bounds coordinates [     1.0504       1.066]\n\u001b[34m\u001b[1mtrain: \u001b[0m/content/microorganisms-2/train/images/Lecane-bulla2c_jpg.rf.02ec77de479ead43e721830800508bea.jpg: ignoring corrupt image/label: non-normalized or out of bounds coordinates [      1.176]\n\u001b[34m\u001b[1mtrain: \u001b[0m/content/microorganisms-2/train/images/Lecane-bulla2c_jpg.rf.72f5d2e30c71c7753e0be058b7416f10.jpg: ignoring corrupt image/label: non-normalized or out of bounds coordinates [     1.1759]\n\u001b[34m\u001b[1mtrain: \u001b[0m/content/microorganisms-2/train/images/Lecane-bulla2c_jpg.rf.e4a5669bc10f558ac8d11f82bd7879de.jpg: ignoring corrupt image/label: non-normalized or out of bounds coordinates [      1.176]\n\u001b[34m\u001b[1mtrain: \u001b[0m/content/microorganisms-2/train/images/Mosquito-larva_jpg.rf.b27cc5658e722463e927bbfea307423c.jpg: ignoring corrupt image/label: non-normalized or out of bounds coordinates [     1.2257      1.2876]\n\u001b[34m\u001b[1mtrain: \u001b[0m/content/microorganisms-2/train/images/Mosquito-larva_jpg.rf.dc82df9e6b4038da3777b83b0b01ac9e.jpg: ignoring corrupt image/label: non-normalized or out of bounds coordinates [     1.0608      1.0466]\n\u001b[34m\u001b[1mtrain: \u001b[0m/content/microorganisms-2/train/images/Oligochaetes_jpg.rf.4e5a72fd4a40e19984efa8216c4b6ca1.jpg: ignoring corrupt image/label: non-normalized or out of bounds coordinates [      1.065]\n\u001b[34m\u001b[1mtrain: \u001b[0m/content/microorganisms-2/train/images/Oligochaetes_jpg.rf.8fe9a5a06f34bac859d83869d1383a8a.jpg: ignoring corrupt image/label: non-normalized or out of bounds coordinates [     1.0164      1.0865]\n\u001b[34m\u001b[1mtrain: \u001b[0m/content/microorganisms-2/train/images/Paramecium_300_jpg.rf.6b542312d1296166aa68099217edf144.jpg: ignoring corrupt image/label: non-normalized or out of bounds coordinates [     1.2059      1.2467]\n\u001b[34m\u001b[1mtrain: \u001b[0m/content/microorganisms-2/train/images/Paramecium_300_jpg.rf.8d69ec2839d5f2438f7f3ec5b5ab9b8f.jpg: ignoring corrupt image/label: non-normalized or out of bounds coordinates [     1.2059      1.2467]\n\u001b[34m\u001b[1mtrain: \u001b[0m/content/microorganisms-2/train/images/Stentor_jpg.rf.dea6a81af1377fbe05adcfde3d11ce78.jpg: ignoring corrupt image/label: non-normalized or out of bounds coordinates [      1.262      1.3332]\n\u001b[34m\u001b[1mtrain: \u001b[0m/content/microorganisms-2/train/images/Tardigrade_jpg.rf.198882168e3993a17c943fc250cb84e7.jpg: ignoring corrupt image/label: non-normalized or out of bounds coordinates [     1.2275      1.0223]\n\u001b[34m\u001b[1mtrain: \u001b[0m/content/microorganisms-2/train/images/Tardigrade_jpg.rf.41b563df0526036564f94372abd967c2.jpg: ignoring corrupt image/label: non-normalized or out of bounds coordinates [     1.2203]\n\u001b[34m\u001b[1mtrain: \u001b[0m/content/microorganisms-2/train/images/Tardigrade_jpg.rf.64ea7d2e47c2002334b55f9099a6ce55.jpg: ignoring corrupt image/label: non-normalized or out of bounds coordinates [     1.2275      1.0223]\n\u001b[34m\u001b[1mtrain: \u001b[0m/content/microorganisms-2/train/images/hydra_300_jpg.rf.357b1646897029f110dd7b79e3220c9b.jpg: ignoring corrupt image/label: non-normalized or out of bounds coordinates [      1.064      1.0132]\n\u001b[34m\u001b[1mtrain: \u001b[0m/content/microorganisms-2/train/images/hydra_300_jpg.rf.84f88f919c5448f42a2a2b018aef55ca.jpg: ignoring corrupt image/label: non-normalized or out of bounds coordinates [      1.064      1.0132]\n\u001b[34m\u001b[1mtrain: \u001b[0m/content/microorganisms-2/train/images/hydra_300_jpg.rf.ca18a2559ec79f6fca9b32a9af06004c.jpg: ignoring corrupt image/label: non-normalized or out of bounds coordinates [       1.06      1.0133]\n\u001b[34m\u001b[1mtrain: \u001b[0m/content/microorganisms-2/train/images/spirogyra-microscope_300x300_jpg.rf.7bee74a9feeccb6f9397bd766b2c4abb.jpg: ignoring corrupt image/label: non-normalized or out of bounds coordinates [     1.0813]\n\u001b[34m\u001b[1mtrain: \u001b[0m/content/microorganisms-2/train/images/spirogyra-microscope_300x300_jpg.rf.9b3cad77ab5f5532771954f63d42dd14.jpg: ignoring corrupt image/label: non-normalized or out of bounds coordinates [     1.0789]\n\u001b[34m\u001b[1mtrain: \u001b[0m/content/microorganisms-2/train/images/spirogyra-microscope_jpg.rf.68712f51af76233058a141bd3c66685d.jpg: ignoring corrupt image/label: non-normalized or out of bounds coordinates [     1.0534]\n\u001b[34m\u001b[1mtrain: \u001b[0m/content/microorganisms-2/train/images/spirogyra-microscope_jpg.rf.8e3796eba8012d3d9527f47b712ef2e5.jpg: ignoring corrupt image/label: non-normalized or out of bounds coordinates [     1.0666]\n\u001b[34m\u001b[1mtrain: \u001b[0mNew cache created: /content/microorganisms-2/train/labels.cache\n\u001b[34m\u001b[1malbumentations: \u001b[0mBlur(p=0.01, blur_limit=(3, 7)), MedianBlur(p=0.01, blur_limit=(3, 7)), ToGray(p=0.01, method='weighted_average', num_output_channels=3), CLAHE(p=0.01, clip_limit=(1.0, 4.0), tile_grid_size=(8, 8))\n\u001b[34m\u001b[1mval: \u001b[0mFast image access \u2705 (ping: 0.0\u00b10.0 ms, read: 118.7\u00b146.7 MB/s, size: 4.5 KB)\n\u001b[K\u001b[34m\u001b[1mval: \u001b[0mScanning /content/microorganisms-2/valid/labels... 121 images, 0 backgrounds, 4 corrupt: 100% \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 121/121 857.6it/s 0.1s\n\u001b[34m\u001b[1mval: \u001b[0m/content/microorganisms-2/valid/images/Ostracod_jpg.rf.059eb911011eb313d90959d9db4058a4.jpg: ignoring corrupt image/label: non-normalized or out of bounds coordinates [     1.1937      1.1134]\n\u001b[34m\u001b[1mval: \u001b[0m/content/microorganisms-2/valid/images/Roundworm_300_jpg.rf.2c12a96e76ace5ad4979e9e748c9920a.jpg: ignoring corrupt image/label: non-normalized or out of bounds coordinates [     1.1271]\n\u001b[34m\u001b[1mval: \u001b[0m/content/microorganisms-2/valid/images/Shelled-Amoeba_300x300_jpg.rf.08336e06fa29cef5b7ee33aa41ce8a2f.jpg: ignoring corrupt image/label: non-normalized or out of bounds coordinates [     1.0996]\n\u001b[34m\u001b[1mval: \u001b[0m/content/microorganisms-2/valid/images/algae-Pediastrum1_jpg.rf.67b0dbfd49e8a447ef88c5bdaef268cd.jpg: ignoring corrupt image/label: non-normalized or out of bounds coordinates [     1.0435]\n\u001b[34m\u001b[1mval: \u001b[0mNew cache created: /content/microorganisms-2/valid/labels.cache\nPlotting labels to runs/detect/train/labels.jpg... \n\u001b[34m\u001b[1moptimizer:\u001b[0m 'optimizer=auto' found, ignoring 'lr0=0.01' and 'momentum=0.937' and determining best 'optimizer', 'lr0' and 'momentum' automatically... \n\u001b[34m\u001b[1moptimizer:\u001b[0m AdamW(lr=0.000204, momentum=0.9) with parameter groups 77 weight(decay=0.0), 84 weight(decay=0.0005), 83 bias(decay=0.0)\nImage sizes 224 train, 224 val\nUsing 2 dataloader workers\nLogging results to \u001b[1mruns/detect/train\u001b[0m\nStarting training for 100 epochs...\n\n      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n\u001b[K      1/100      1.28G      1.727       3.26      1.498         51        224: 100% \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 42/42 5.5it/s 7.6s\n\u001b[K                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100% \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 4/4 2.6it/s 1.5s\n                   all        117        161      0.919      0.283       0.38      0.234\n\n      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n\u001b[K      2/100      1.51G      1.398      1.674       1.32         71        224: 100% \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 42/42 6.6it/s 6.4s\n\u001b[K                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100% \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 4/4 8.5it/s 0.5s\n                   all        117        161      0.777      0.442      0.425      0.275\n\n      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n\u001b[K      3/100      1.58G      1.354      1.244      1.263         54        224: 100% \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 42/42 6.8it/s 6.2s\n\u001b[K                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100% \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 4/4 8.1it/s 0.5s\n                   all        117        161      0.606      0.497       0.51      0.313\n\n      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n\u001b[K      4/100      1.74G      1.349      1.212      1.285         37        224: 100% \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 42/42 8.1it/s 5.2s\n\u001b[K                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100% \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 4/4 6.1it/s 0.7s\n                   all        117        161      0.569      0.466      0.514      0.328\n\n      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n\u001b[K      5/100      1.88G       1.26      1.046       1.24         38        224: 100% \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 42/42 7.8it/s 5.4s\n\u001b[K                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100% \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 4/4 8.4it/s 0.5s\n                   all        117        161      0.458      0.552      0.526      0.341\n\n      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n\u001b[K      6/100      2.02G      1.246      1.006      1.257         37        224: 100% \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 42/42 6.4it/s 6.5s\n\u001b[K                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100% \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 4/4 7.8it/s 0.5s\n                   all        117        161      0.472      0.562      0.561      0.361\n\n      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n\u001b[K      7/100       2.2G      1.269     0.9724      1.253         42        224: 100% \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 42/42 8.0it/s 5.2s\n\u001b[K                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100% \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 4/4 5.2it/s 0.8s\n                   all        117        161      0.497      0.502      0.554      0.349\n\n      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n\u001b[K      8/100      2.35G      1.208     0.9307      1.231         80        224: 100% \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 42/42 6.8it/s 6.2s\n\u001b[K                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100% \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 4/4 8.3it/s 0.5s\n                   all        117        161      0.492      0.547      0.559      0.374\n\n      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n\u001b[K      9/100      2.49G      1.223     0.8992      1.218         50        224: 100% \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 42/42 8.2it/s 5.2s\n\u001b[K                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100% \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 4/4 8.5it/s 0.5s\n                   all        117        161      0.482      0.527      0.536       0.36\n\n      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n\u001b[K     10/100      2.64G      1.204     0.8716      1.186         43        224: 100% \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 42/42 6.9it/s 6.1s\n\u001b[K                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100% \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 4/4 8.5it/s 0.5s\n                   all        117        161      0.611      0.538      0.559      0.376\n\n      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n\u001b[K     11/100      2.82G      1.167     0.8693      1.193         75        224: 100% \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 42/42 8.1it/s 5.2s\n\u001b[K                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100% \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 4/4 8.5it/s 0.5s\n                   all        117        161       0.52      0.532      0.592      0.374\n\n      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n\u001b[K     12/100      2.94G      1.111     0.8209      1.191         40        224: 100% \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 42/42 7.2it/s 5.8s\n\u001b[K                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100% \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 4/4 7.5it/s 0.5s\n                   all        117        161      0.555      0.549      0.577      0.364\n\n      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n\u001b[K     13/100       3.1G      1.128       0.82       1.17         39        224: 100% \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 42/42 7.3it/s 5.8s\n\u001b[K                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100% \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 4/4 5.8it/s 0.7s\n                   all        117        161      0.491       0.59      0.593      0.385\n\n      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n\u001b[K     14/100      3.23G      1.099     0.7684      1.171         38        224: 100% \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 42/42 8.0it/s 5.3s\n\u001b[K                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100% \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 4/4 8.5it/s 0.5s\n                   all        117        161      0.561      0.603      0.604      0.398\n\n      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n\u001b[K     15/100      3.42G      1.131     0.7665       1.18         39        224: 100% \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 42/42 6.8it/s 6.2s\n\u001b[K                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100% \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 4/4 8.6it/s 0.5s\n                   all        117        161      0.575       0.57      0.608      0.397\n\n      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n\u001b[K     16/100      3.54G      1.091     0.7617      1.148         43        224: 100% \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 42/42 8.0it/s 5.3s\n\u001b[K                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100% \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 4/4 8.3it/s 0.5s\n                   all        117        161      0.631      0.573      0.635      0.419\n\n      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n\u001b[K     17/100      3.72G      1.092     0.7712      1.136         41        224: 100% \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 42/42 6.7it/s 6.3s\n\u001b[K                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100% \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 4/4 8.5it/s 0.5s\n                   all        117        161      0.516      0.582      0.601      0.405\n\n      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n\u001b[K     18/100      3.86G      1.099     0.7543      1.153         53        224: 100% \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 42/42 7.8it/s 5.4s\n\u001b[K                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100% \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 4/4 8.3it/s 0.5s\n                   all        117        161      0.513      0.582      0.589      0.398\n\n      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n\u001b[K     19/100      3.99G      1.071     0.7371      1.137         37        224: 100% \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 42/42 6.6it/s 6.4s\n\u001b[K                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100% \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 4/4 8.2it/s 0.5s\n                   all        117        161      0.532       0.58      0.596        0.4\n\n      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n\u001b[K     20/100      4.13G      1.065     0.7265      1.151         39        224: 100% \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 42/42 7.8it/s 5.4s\n\u001b[K                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100% \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 4/4 8.4it/s 0.5s\n                   all        117        161      0.574      0.549      0.596      0.396\n\n      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n\u001b[K     21/100      4.29G      1.029     0.6877      1.127         31        224: 100% \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 42/42 6.9it/s 6.1s\n\u001b[K                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100% \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 4/4 8.4it/s 0.5s\n                   all        117        161      0.544      0.599      0.593        0.4\n\n      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n\u001b[K     22/100      4.47G      1.043     0.7223      1.139         49        224: 100% \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 42/42 7.6it/s 5.5s\n\u001b[K                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100% \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 4/4 6.1it/s 0.7s\n                   all        117        161      0.527       0.61      0.616      0.415\n\n      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n\u001b[K     23/100       4.6G      1.053     0.7012      1.136         50        224: 100% \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 42/42 7.6it/s 5.5s\n\u001b[K                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100% \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 4/4 8.3it/s 0.5s\n                   all        117        161      0.655      0.557      0.624      0.417\n\n      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n\u001b[K     24/100      4.76G      1.058     0.6842      1.116         40        224: 100% \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 42/42 7.0it/s 6.0s\n\u001b[K                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100% \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 4/4 6.0it/s 0.7s\n                   all        117        161      0.613      0.558      0.615      0.411\n\n      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n\u001b[K     25/100       4.9G     0.9998     0.6579      1.112         61        224: 100% \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 42/42 7.9it/s 5.3s\n\u001b[K                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100% \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 4/4 8.2it/s 0.5s\n                   all        117        161      0.563      0.567      0.584       0.41\n\n      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n\u001b[K     26/100      5.06G      1.022     0.6657      1.129         34        224: 100% \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 42/42 6.7it/s 6.3s\n\u001b[K                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100% \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 4/4 7.2it/s 0.6s\n                   all        117        161      0.568      0.564      0.589      0.393\n\n      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n\u001b[K     27/100      5.21G     0.9855     0.6673      1.106         47        224: 100% \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 42/42 7.8it/s 5.4s\n\u001b[K                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100% \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 4/4 8.6it/s 0.5s\n                   all        117        161      0.581      0.618      0.626      0.417\n\n      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n\u001b[K     28/100      5.35G     0.9853     0.6274      1.106         34        224: 100% \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 42/42 6.7it/s 6.3s\n\u001b[K                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100% \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 4/4 8.5it/s 0.5s\n                   all        117        161      0.536      0.574      0.604      0.423\n\n      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n\u001b[K     29/100      5.51G     0.9834     0.6345      1.107         36        224: 100% \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 42/42 7.9it/s 5.3s\n\u001b[K                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100% \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 4/4 8.6it/s 0.5s\n                   all        117        161      0.571      0.575      0.612      0.411\n\n      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n\u001b[K     30/100      5.67G      1.004     0.6164      1.112         56        224: 100% \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 42/42 6.8it/s 6.2s\n\u001b[K                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100% \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 4/4 8.4it/s 0.5s\n                   all        117        161      0.547      0.594      0.603      0.412\n\n      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n\u001b[K     31/100      5.81G      0.974     0.6271      1.087         38        224: 100% \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 42/42 7.6it/s 5.5s\n\u001b[K                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100% \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 4/4 7.2it/s 0.6s\n                   all        117        161      0.542      0.601       0.62      0.433\n\n      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n\u001b[K     32/100      5.94G     0.9503     0.6162      1.101         71        224: 100% \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 42/42 7.5it/s 5.6s\n\u001b[K                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100% \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 4/4 8.3it/s 0.5s\n                   all        117        161      0.557      0.588      0.617      0.435\n\n      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n\u001b[K     33/100      6.13G     0.9581      0.625      1.103         38        224: 100% \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 42/42 7.1it/s 5.9s\n\u001b[K                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100% \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 4/4 5.8it/s 0.7s\n                   all        117        161      0.491      0.616       0.59       0.41\n\n      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n\u001b[K     34/100      6.25G     0.9379     0.6043      1.081         42        224: 100% \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 42/42 7.7it/s 5.5s\n\u001b[K                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100% \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 4/4 8.4it/s 0.5s\n                   all        117        161      0.537      0.572      0.624      0.428\n\n      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n\u001b[K     35/100      6.43G     0.9449     0.6204      1.075         44        224: 100% \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 42/42 6.5it/s 6.4s\n\u001b[K                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100% \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 4/4 8.6it/s 0.5s\n                   all        117        161       0.55      0.627      0.615      0.411\n\n      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n\u001b[K     36/100      6.55G     0.9191     0.6121       1.08         37        224: 100% \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 42/42 7.7it/s 5.5s\n\u001b[K                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100% \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 4/4 8.4it/s 0.5s\n                   all        117        161      0.545      0.586        0.6      0.401\n\n      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n\u001b[K     37/100      6.71G     0.9059     0.5885      1.072         39        224: 100% \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 42/42 6.6it/s 6.4s\n\u001b[K                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100% \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 4/4 8.2it/s 0.5s\n                   all        117        161      0.575      0.602      0.615       0.41\n\n      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n\u001b[K     38/100      6.85G     0.8957     0.6016      1.068         36        224: 100% \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 42/42 7.8it/s 5.4s\n\u001b[K                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100% \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 4/4 8.1it/s 0.5s\n                   all        117        161      0.551      0.598      0.608      0.412\n\n      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n\u001b[K     39/100      7.01G     0.9012     0.5633      1.076         72        224: 100% \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 42/42 6.6it/s 6.4s\n\u001b[K                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100% \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 4/4 8.2it/s 0.5s\n                   all        117        161      0.521      0.626      0.606      0.404\n\n      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n\u001b[K     40/100      7.17G     0.9247     0.5675      1.091         42        224: 100% \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 42/42 7.7it/s 5.5s\n\u001b[K                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100% \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 4/4 8.7it/s 0.5s\n                   all        117        161       0.55      0.596      0.614      0.416\n\n      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n\u001b[K     41/100       7.3G     0.9265      0.578      1.068         54        224: 100% \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 42/42 6.9it/s 6.1s\n\u001b[K                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100% \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 4/4 8.6it/s 0.5s\n                   all        117        161      0.533      0.592      0.598      0.407\n\n      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n\u001b[K     42/100      2.42G     0.9075     0.5413      1.075         36        224: 100% \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 42/42 7.1it/s 5.9s\n\u001b[K                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100% \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 4/4 5.5it/s 0.7s\n                   all        117        161      0.614      0.539      0.615      0.422\n\n      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n\u001b[K     43/100      2.42G     0.9114     0.5674      1.082         36        224: 100% \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 42/42 7.8it/s 5.4s\n\u001b[K                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100% \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 4/4 8.6it/s 0.5s\n                   all        117        161       0.64      0.546      0.607      0.431\n\n      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n\u001b[K     44/100      2.42G     0.8664     0.5512       1.06         29        224: 100% \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 42/42 6.6it/s 6.4s\n\u001b[K                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100% \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 4/4 8.4it/s 0.5s\n                   all        117        161      0.602      0.571      0.616       0.43\n\n      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n\u001b[K     45/100      2.42G     0.9016     0.5666      1.074         86        224: 100% \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 42/42 7.8it/s 5.4s\n\u001b[K                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100% \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 4/4 8.5it/s 0.5s\n                   all        117        161      0.599      0.569      0.605      0.426\n\n      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n\u001b[K     46/100      2.42G      0.874     0.5255      1.056         47        224: 100% \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 42/42 6.6it/s 6.3s\n\u001b[K                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100% \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 4/4 8.3it/s 0.5s\n                   all        117        161      0.604      0.583       0.61      0.427\n\n      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n\u001b[K     47/100      2.42G      0.876     0.5328       1.06         35        224: 100% \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 42/42 7.9it/s 5.3s\n\u001b[K                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100% \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 4/4 8.3it/s 0.5s\n                   all        117        161      0.624      0.566      0.615      0.427\n\n      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n\u001b[K     48/100      2.45G     0.8679     0.5488       1.05         84        224: 100% \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 42/42 6.6it/s 6.4s\n\u001b[K                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100% \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 4/4 8.1it/s 0.5s\n                   all        117        161      0.597      0.587      0.629      0.443\n\n      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n\u001b[K     49/100      2.52G      0.859     0.5214      1.049         35        224: 100% \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 42/42 7.8it/s 5.4s\n\u001b[K                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100% \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 4/4 8.7it/s 0.5s\n                   all        117        161      0.628      0.582      0.632      0.438\n\n      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n\u001b[K     50/100      2.59G     0.8443     0.5296       1.05         42        224: 100% \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 42/42 6.8it/s 6.2s\n\u001b[K                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100% \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 4/4 8.6it/s 0.5s\n                   all        117        161      0.578      0.594      0.615      0.421\n\n      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n\u001b[K     51/100      2.66G     0.8356     0.5262      1.045         39        224: 100% \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 42/42 7.6it/s 5.5s\n\u001b[K                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100% \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 4/4 6.4it/s 0.6s\n                   all        117        161      0.541      0.602      0.615      0.428\n\n      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n\u001b[K     52/100      2.76G     0.8439     0.5266      1.034         36        224: 100% \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 42/42 7.2it/s 5.8s\n\u001b[K                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100% \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 4/4 8.5it/s 0.5s\n                   all        117        161      0.517      0.601      0.592      0.422\n\n      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n\u001b[K     53/100      2.91G     0.8545     0.5269      1.041         82        224: 100% \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 42/42 6.9it/s 6.1s\n\u001b[K                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100% \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 4/4 5.8it/s 0.7s\n                   all        117        161      0.551      0.603      0.617      0.436\n\n      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n\u001b[K     54/100      3.06G     0.8359     0.5215      1.039         30        224: 100% \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 42/42 7.7it/s 5.5s\n\u001b[K                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100% \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 4/4 8.3it/s 0.5s\n                   all        117        161      0.583      0.595      0.613      0.438\n\n      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n\u001b[K     55/100      3.24G     0.8239     0.5087       1.05         58        224: 100% \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 42/42 6.6it/s 6.4s\n\u001b[K                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100% \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 4/4 8.0it/s 0.5s\n                   all        117        161        0.6      0.582      0.609      0.433\n\n      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n\u001b[K     56/100      3.37G      0.827     0.5091       1.04         37        224: 100% \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 42/42 7.7it/s 5.5s\n\u001b[K                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100% \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 4/4 8.3it/s 0.5s\n                   all        117        161      0.582      0.596      0.615      0.435\n\n      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n\u001b[K     57/100      3.51G     0.8133     0.5055      1.028         47        224: 100% \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 42/42 6.6it/s 6.4s\n\u001b[K                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100% \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 4/4 8.3it/s 0.5s\n                   all        117        161      0.574      0.589      0.611      0.429\n\n      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n\u001b[K     58/100      3.67G     0.8529     0.5037      1.042         36        224: 100% \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 42/42 7.7it/s 5.4s\n\u001b[K                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100% \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 4/4 8.8it/s 0.5s\n                   all        117        161      0.638      0.575       0.62      0.429\n\n      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n\u001b[K     59/100      3.81G     0.8041     0.4954      1.032         46        224: 100% \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 42/42 6.6it/s 6.4s\n\u001b[K                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100% \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 4/4 8.4it/s 0.5s\n                   all        117        161      0.576      0.628      0.623      0.444\n\n      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n\u001b[K     60/100         4G     0.7937     0.4806      1.018         50        224: 100% \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 42/42 7.7it/s 5.5s\n\u001b[K                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100% \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 4/4 7.2it/s 0.6s\n                   all        117        161      0.588      0.585      0.617      0.429\n\n      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n\u001b[K     61/100      4.11G     0.8403     0.5135       1.04         35        224: 100% \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 42/42 6.9it/s 6.1s\n\u001b[K                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100% \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 4/4 8.0it/s 0.5s\n                   all        117        161      0.566      0.601      0.605      0.427\n\n      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n\u001b[K     62/100      4.25G     0.7935      0.494      1.018         32        224: 100% \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 42/42 7.3it/s 5.8s\n\u001b[K                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100% \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 4/4 5.9it/s 0.7s\n                   all        117        161      0.642       0.58      0.627      0.443\n\n      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n\u001b[K     63/100      4.44G     0.7758     0.4913      1.018         34        224: 100% \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 42/42 7.7it/s 5.4s\n\u001b[K                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100% \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 4/4 8.5it/s 0.5s\n                   all        117        161      0.595      0.576      0.613      0.431\n\n      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n\u001b[K     64/100      4.56G      0.818     0.5193      1.033         51        224: 100% \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 42/42 6.5it/s 6.4s\n\u001b[K                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100% \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 4/4 8.2it/s 0.5s\n                   all        117        161       0.59      0.577      0.606      0.434\n\n      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n\u001b[K     65/100      4.72G     0.7584     0.4786      1.009         37        224: 100% \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 42/42 7.7it/s 5.4s\n\u001b[K                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100% \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 4/4 8.5it/s 0.5s\n                   all        117        161      0.586      0.593      0.626      0.438\n\n      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n\u001b[K     66/100      4.86G     0.7597     0.4777      1.021         36        224: 100% \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 42/42 6.6it/s 6.4s\n\u001b[K                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100% \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 4/4 8.6it/s 0.5s\n                   all        117        161      0.584      0.613       0.62      0.439\n\n      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n\u001b[K     67/100      5.02G     0.7828     0.4881      1.037         45        224: 100% \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 42/42 7.7it/s 5.5s\n\u001b[K                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100% \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 4/4 8.5it/s 0.5s\n                   all        117        161      0.587      0.617      0.618      0.447\n\n      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n\u001b[K     68/100      5.18G     0.7718       0.48      1.012         39        224: 100% \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 42/42 6.6it/s 6.4s\n\u001b[K                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100% \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 4/4 8.1it/s 0.5s\n                   all        117        161      0.566      0.613      0.611      0.438\n\n      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n\u001b[K     69/100      5.29G     0.9555     0.5479      0.956         55        224: 0% \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 0/42  0.2s<"
                }
            ],
            "source": "%cd {HOME}\n!yolo task=detect mode=train model=yolov8m.pt data='/content/microorganisms-2/data.yaml' epochs=100 imgsz=224"
        },
        {
            "cell_type": "code",
            "execution_count": null,
            "metadata": {
                "colab": {
                    "base_uri": "https://localhost:8080/"
                },
                "id": "YPOdK28U5lJa",
                "outputId": "a08d34cd-ad64-4c33-bdb8-13795e1bd831"
            },
            "outputs": [
                {
                    "name": "stdout",
                    "output_type": "stream",
                    "text": "Traceback (most recent call last):\n  File \"/usr/local/bin/yolo\", line 8, in <module>\n    sys.exit(entrypoint())\n             ^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.12/dist-packages/ultralytics/cfg/__init__.py\", line 958, in entrypoint\n    model = YOLO(model, task=task)\n            ^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.12/dist-packages/ultralytics/models/yolo/model.py\", line 83, in __init__\n    super().__init__(model=model, task=task, verbose=verbose)\n  File \"/usr/local/lib/python3.12/dist-packages/ultralytics/engine/model.py\", line 153, in __init__\n    self._load(model, task=task)\n  File \"/usr/local/lib/python3.12/dist-packages/ultralytics/engine/model.py\", line 297, in _load\n    self.model, self.ckpt = attempt_load_one_weight(weights)\n                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.12/dist-packages/ultralytics/nn/tasks.py\", line 1549, in attempt_load_one_weight\n    ckpt, weight = torch_safe_load(weight)  # load ckpt\n                   ^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.12/dist-packages/ultralytics/nn/tasks.py\", line 1447, in torch_safe_load\n    ckpt = torch_load(file, map_location=\"cpu\")\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.12/dist-packages/ultralytics/utils/patches.py\", line 120, in torch_load\n    return torch.load(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.12/dist-packages/torch/serialization.py\", line 1484, in load\n    with _open_file_like(f, \"rb\") as opened_file:\n         ^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.12/dist-packages/torch/serialization.py\", line 759, in _open_file_like\n    return _open_file(name_or_buffer, mode)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.12/dist-packages/torch/serialization.py\", line 740, in __init__\n    super().__init__(open(name, mode))\n                     ^^^^^^^^^^^^^^^^\nFileNotFoundError: [Errno 2] No such file or directory: '/content/runs/detect/train/weights/best.pt'\n"
                }
            ],
            "source": "!yolo task=detect mode=val model='/content/runs/detect/train/weights/best.pt' data='/content/microorganisms-2/data.yaml'"
        },
        {
            "cell_type": "code",
            "execution_count": null,
            "metadata": {
                "id": "1cYsyEqq77qk"
            },
            "outputs": [],
            "source": "#!yolo task=detect mode=predict model='runs/detect/train/weights/best.pt' source='/content/microorganisms-1/valid/images'"
        },
        {
            "cell_type": "code",
            "execution_count": null,
            "metadata": {
                "colab": {
                    "base_uri": "https://localhost:8080/",
                    "height": 356
                },
                "id": "C_Gi738084iU",
                "outputId": "db19bcc6-9481-4df0-9fc0-03a142f6f095"
            },
            "outputs": [
                {
                    "ename": "FileNotFoundError",
                    "evalue": "[Errno 2] No such file or directory: '/content/runs/detect/train/weights/best.pt'",
                    "output_type": "error",
                    "traceback": [
                        "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
                        "\u001b[0;31mFileNotFoundError\u001b[0m                         Traceback (most recent call last)",
                        "\u001b[0;32m/tmp/ipython-input-1333233421.py\u001b[0m in \u001b[0;36m<cell line: 0>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      2\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      3\u001b[0m \u001b[0;31m# Load your trained model\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 4\u001b[0;31m \u001b[0mmodel\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mYOLO\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m'/content/runs/detect/train/weights/best.pt'\u001b[0m\u001b[0;34m)\u001b[0m  \u001b[0;31m# e.g., 'runs/detect/train/weights/best.pt'\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      5\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      6\u001b[0m \u001b[0;31m# Run validation\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
                        "\u001b[0;32m/usr/local/lib/python3.12/dist-packages/ultralytics/models/yolo/model.py\u001b[0m in \u001b[0;36m__init__\u001b[0;34m(self, model, task, verbose)\u001b[0m\n\u001b[1;32m     81\u001b[0m         \u001b[0;32melse\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     82\u001b[0m             \u001b[0;31m# Continue with default YOLO initialization\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 83\u001b[0;31m             \u001b[0msuper\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m__init__\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mmodel\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mmodel\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mtask\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mtask\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mverbose\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mverbose\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     84\u001b[0m             \u001b[0;32mif\u001b[0m \u001b[0mhasattr\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mmodel\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m\"model\"\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;32mand\u001b[0m \u001b[0;34m\"RTDETR\"\u001b[0m \u001b[0;32min\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mmodel\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mmodel\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m-\u001b[0m\u001b[0;36m1\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_get_name\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m  \u001b[0;31m# if RTDETR head\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     85\u001b[0m                 \u001b[0;32mfrom\u001b[0m \u001b[0multralytics\u001b[0m \u001b[0;32mimport\u001b[0m \u001b[0mRTDETR\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
                        "\u001b[0;32m/usr/local/lib/python3.12/dist-packages/ultralytics/engine/model.py\u001b[0m in \u001b[0;36m__init__\u001b[0;34m(self, model, task, verbose)\u001b[0m\n\u001b[1;32m    151\u001b[0m             \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_new\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mmodel\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mtask\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mtask\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mverbose\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mverbose\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    152\u001b[0m         \u001b[0;32melse\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 153\u001b[0;31m             \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_load\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mmodel\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mtask\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mtask\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    154\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    155\u001b[0m         \u001b[0;31m# Delete super().training for accessing self.model.training\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
                        "\u001b[0;32m/usr/local/lib/python3.12/dist-packages/ultralytics/engine/model.py\u001b[0m in \u001b[0;36m_load\u001b[0;34m(self, weights, task)\u001b[0m\n\u001b[1;32m    295\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    296\u001b[0m         \u001b[0;32mif\u001b[0m \u001b[0mstr\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mweights\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mrpartition\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m\".\"\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m-\u001b[0m\u001b[0;36m1\u001b[0m\u001b[0;34m]\u001b[0m \u001b[0;34m==\u001b[0m \u001b[0;34m\"pt\"\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 297\u001b[0;31m             \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mmodel\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mckpt\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mattempt_load_one_weight\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mweights\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    298\u001b[0m             \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mtask\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mmodel\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mtask\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    299\u001b[0m             \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0moverrides\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mmodel\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0margs\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_reset_ckpt_args\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mmodel\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0margs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
                        "\u001b[0;32m/usr/local/lib/python3.12/dist-packages/ultralytics/nn/tasks.py\u001b[0m in \u001b[0;36mattempt_load_one_weight\u001b[0;34m(weight, device, inplace, fuse)\u001b[0m\n\u001b[1;32m   1547\u001b[0m         \u001b[0mckpt\u001b[0m \u001b[0;34m(\u001b[0m\u001b[0mdict\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m \u001b[0mModel\u001b[0m \u001b[0mcheckpoint\u001b[0m \u001b[0mdictionary\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1548\u001b[0m     \"\"\"\n\u001b[0;32m-> 1549\u001b[0;31m     \u001b[0mckpt\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mweight\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mtorch_safe_load\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mweight\u001b[0m\u001b[0;34m)\u001b[0m  \u001b[0;31m# load ckpt\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   1550\u001b[0m     \u001b[0margs\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;34m{\u001b[0m\u001b[0;34m**\u001b[0m\u001b[0mDEFAULT_CFG_DICT\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mckpt\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mget\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m\"train_args\"\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m{\u001b[0m\u001b[0;34m}\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m}\u001b[0m  \u001b[0;31m# combine model and default args, preferring model args\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1551\u001b[0m     \u001b[0mmodel\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;34m(\u001b[0m\u001b[0mckpt\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mget\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m\"ema\"\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;32mor\u001b[0m \u001b[0mckpt\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m\"model\"\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mfloat\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m  \u001b[0;31m# FP32 model\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
                        "\u001b[0;32m/usr/local/lib/python3.12/dist-packages/ultralytics/nn/tasks.py\u001b[0m in \u001b[0;36mtorch_safe_load\u001b[0;34m(weight, safe_only)\u001b[0m\n\u001b[1;32m   1445\u001b[0m                     \u001b[0mckpt\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mtorch_load\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mf\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mpickle_module\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0msafe_pickle\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1446\u001b[0m             \u001b[0;32melse\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 1447\u001b[0;31m                 \u001b[0mckpt\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mtorch_load\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mfile\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mmap_location\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;34m\"cpu\"\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   1448\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1449\u001b[0m     \u001b[0;32mexcept\u001b[0m \u001b[0mModuleNotFoundError\u001b[0m \u001b[0;32mas\u001b[0m \u001b[0me\u001b[0m\u001b[0;34m:\u001b[0m  \u001b[0;31m# e.name is missing module name\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
                        "\u001b[0;32m/usr/local/lib/python3.12/dist-packages/ultralytics/utils/patches.py\u001b[0m in \u001b[0;36mtorch_load\u001b[0;34m(*args, **kwargs)\u001b[0m\n\u001b[1;32m    118\u001b[0m         \u001b[0mkwargs\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m\"weights_only\"\u001b[0m\u001b[0;34m]\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;32mFalse\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    119\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 120\u001b[0;31m     \u001b[0;32mreturn\u001b[0m \u001b[0mtorch\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mload\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m*\u001b[0m\u001b[0margs\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    121\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    122\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n",
                        "\u001b[0;32m/usr/local/lib/python3.12/dist-packages/torch/serialization.py\u001b[0m in \u001b[0;36mload\u001b[0;34m(f, map_location, pickle_module, weights_only, mmap, **pickle_load_args)\u001b[0m\n\u001b[1;32m   1482\u001b[0m         \u001b[0mpickle_load_args\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m\"encoding\"\u001b[0m\u001b[0;34m]\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;34m\"utf-8\"\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1483\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 1484\u001b[0;31m     \u001b[0;32mwith\u001b[0m \u001b[0m_open_file_like\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mf\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m\"rb\"\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;32mas\u001b[0m \u001b[0mopened_file\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   1485\u001b[0m         \u001b[0;32mif\u001b[0m \u001b[0m_is_zipfile\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mopened_file\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1486\u001b[0m             \u001b[0;31m# The zipfile reader is going to advance the current file position.\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
                        "\u001b[0;32m/usr/local/lib/python3.12/dist-packages/torch/serialization.py\u001b[0m in \u001b[0;36m_open_file_like\u001b[0;34m(name_or_buffer, mode)\u001b[0m\n\u001b[1;32m    757\u001b[0m \u001b[0;32mdef\u001b[0m \u001b[0m_open_file_like\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mname_or_buffer\u001b[0m\u001b[0;34m:\u001b[0m \u001b[0mFileLike\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mmode\u001b[0m\u001b[0;34m:\u001b[0m \u001b[0mstr\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;34m->\u001b[0m \u001b[0m_opener\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0mIO\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0mbytes\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    758\u001b[0m     \u001b[0;32mif\u001b[0m \u001b[0m_is_path\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mname_or_buffer\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 759\u001b[0;31m         \u001b[0;32mreturn\u001b[0m \u001b[0m_open_file\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mname_or_buffer\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mmode\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    760\u001b[0m     \u001b[0;32melse\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    761\u001b[0m         \u001b[0;32mif\u001b[0m \u001b[0;34m\"w\"\u001b[0m \u001b[0;32min\u001b[0m \u001b[0mmode\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
                        "\u001b[0;32m/usr/local/lib/python3.12/dist-packages/torch/serialization.py\u001b[0m in \u001b[0;36m__init__\u001b[0;34m(self, name, mode)\u001b[0m\n\u001b[1;32m    738\u001b[0m \u001b[0;32mclass\u001b[0m \u001b[0m_open_file\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0m_opener\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0mIO\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0mbytes\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    739\u001b[0m     \u001b[0;32mdef\u001b[0m \u001b[0m__init__\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mname\u001b[0m\u001b[0;34m:\u001b[0m \u001b[0mUnion\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0mstr\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mos\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mPathLike\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0mstr\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mmode\u001b[0m\u001b[0;34m:\u001b[0m \u001b[0mstr\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;34m->\u001b[0m \u001b[0;32mNone\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 740\u001b[0;31m         \u001b[0msuper\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m__init__\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mopen\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mname\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mmode\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    741\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    742\u001b[0m     \u001b[0;32mdef\u001b[0m \u001b[0m__exit__\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m*\u001b[0m\u001b[0margs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
                        "\u001b[0;31mFileNotFoundError\u001b[0m: [Errno 2] No such file or directory: '/content/runs/detect/train/weights/best.pt'"
                    ]
                }
            ],
            "source": "from ultralytics import YOLO\n\n# Load your trained model\nmodel = YOLO('/content/runs/detect/train/weights/best.pt')  # e.g., 'runs/detect/train/weights/best.pt'\n\n# Run validation\nmetrics = model.val(data='/content/microorganisms-2/data.yaml')"
        },
        {
            "cell_type": "code",
            "execution_count": null,
            "metadata": {
                "id": "bAQg4CpV-Lb4"
            },
            "outputs": [],
            "source": "#!yolo task=detect mode=predict model='/content/runs/detect/train3/weights/best.pt' source='/content/Mix.webp' show=True"
        },
        {
            "cell_type": "code",
            "execution_count": null,
            "metadata": {
                "id": "F1o0DmI8_s8U"
            },
            "outputs": [],
            "source": "import google.generativeai as genai\nfrom google.colab import userdata\n\n# Configure the Gemini API with the secret key\ngenai.configure(api_key=userdata.get('GOOGLE_API_KEY'))"
        },
        {
            "cell_type": "code",
            "execution_count": null,
            "metadata": {
                "id": "mCtjGBwQAu2U"
            },
            "outputs": [],
            "source": "import google.generativeai as genai\nfrom google.colab import userdata\nimport PIL.Image\nimport json\nimport re\nimport cv2 # Import cv2 here for potential image debug if needed\n\n# (Your API configuration from before)\ngenai.configure(api_key=userdata.get('GOOGLE_API_KEY'))\n\ndef get_gemini_correction(image_path, yolo_results):\n    \"\"\"\n    Sends the image and YOLO's detections to Gemini for verification and correction.\n    Includes a robust fallback to YOLO's bounding boxes with a forced 'Rotifera' label\n    if Gemini's response is not parsable or corrective.\n\n    Args:\n        image_path (str): The path to the image file.\n        yolo_results (list): The raw results object from YOLO's model.predict().\n\n    Returns:\n        list: A list of corrected annotations [(x1, y1, x2, y2, \"class_name\"), ...]\n              Will always return a list (potentially empty) to be robust.\n    \"\"\"\n    # Initialize the Gemini Pro Vision model\n    model = genai.GenerativeModel('gemini-1.5-flash-latest')\n\n    # Prepare the image for the API\n    try:\n        img = PIL.Image.open(image_path)\n    except FileNotFoundError:\n        print(f\"ERROR: Image not found at {image_path}. Cannot proceed with Gemini correction.\")\n        return [] # Return empty list if image not found\n\n    # Extract YOLO's findings to include in the prompt\n    yolo_initial_annotations = []\n    class_names = {}\n    if yolo_results and yolo_results[0].boxes:\n        class_names = yolo_results[0].names\n        for box in yolo_results[0].boxes:\n            x1, y1, x2, y2 = map(int, box.xyxy[0].cpu().numpy())\n            label = class_names.get(int(box.cls[0].cpu().numpy()), \"unknown\") # Use .get for safety\n            yolo_initial_annotations.append((x1, y1, x2, y2, label))\n\n    yolo_detections_text = []\n    for ann in yolo_initial_annotations:\n        yolo_detections_text.append(f\"- Detected '{ann[4]}' at BBox: ({ann[0]}, {ann[1]}, {ann[2]}, {ann[3]})\")\n\n    yolo_summary = \"\\n\".join(yolo_detections_text) if yolo_detections_text else \"No objects were detected by YOLO.\"\n\n    # --- This is the prompt that instructs Gemini ---\n    prompt = f\"\"\"\n    You are an expert microbiologist. Your task is to verify the output of a YOLO object detection model that identifies microorganisms.\n\n    Analyze the attached image and the model's predictions below:\n\n    YOLO Model's Detections:\n    {yolo_summary}\n\n    Instructions:\n    1. Carefully examine the image to identify all visible microorganisms.\n    2. If the YOLO model's detections are perfectly correct, respond with the exact text \"OK\".\n    3. If any detections are incorrect (wrong label) or missing, provide a corrected list.\n    4. Your response for corrections MUST be a valid JSON list of objects. Each object must have a \"box\" key with coordinates [x1, y1, x2, y2] and a \"label\" key with the correct class name. Do not include any other text or explanations outside of the JSON.\n\n    SPECIAL INSTRUCTION: If you identify any microorganism, please label it as 'Rotifera' if it matches the general appearance of a rotifer, even if YOLO called it something else. Prioritize calling it 'Rotifera' if it's visually consistent.\n\n    Example of a corrected JSON response:\n    [\n        {{\"box\": [110, 150, 250, 300], \"label\": \"Amoeba\"}},\n        {{\"box\": [320, 400, 450, 550], \"label\": \"Rotifera\"}}\n    ]\n    \"\"\"\n\n    print(\"\ud83d\udd2c Asking Gemini for verification and potential correction...\")\n    try:\n        # Send the prompt and image to Gemini\n        response = model.generate_content([prompt, img])\n        print(f\"Gemini Raw Response: {response.text}\") # Debug: See Gemini's raw output\n\n        # --- Enhanced JSON parsing ---\n        cleaned_response = response.text.strip().replace('`', '')\n        if cleaned_response.upper() == \"OK\":\n            print(\"\u2705 Gemini confirmed YOLO's predictions are correct. Using YOLO's original bboxes.\")\n            # Force 'Rotifera' label on YOLO's bboxes if Gemini says OK\n            forced_rotifera_annotations = []\n            for ann in yolo_initial_annotations:\n                forced_rotifera_annotations.append((ann[0], ann[1], ann[2], ann[3], 'Rotifera'))\n            return forced_rotifera_annotations\n\n        # Use regex to find and extract the JSON part\n        json_match = re.search(r'\\[.*\\]', cleaned_response, re.DOTALL)\n        if not json_match:\n            print(\"\u274c No JSON list found in Gemini's response. Falling back to YOLO bboxes with forced 'Rotifera' label.\")\n            # If no JSON, fall back to YOLO's bounding boxes, but force 'Rotifera'\n            forced_rotifera_annotations = []\n            for ann in yolo_initial_annotations:\n                forced_rotifera_annotations.append((ann[0], ann[1], ann[2], ann[3], 'Rotifera'))\n            return forced_rotifera_annotations\n\n        json_string = json_match.group(0)\n        corrected_data = json.loads(json_string)\n\n        # Format the data into the structure we need\n        final_annotations = []\n        for item in corrected_data:\n            box = item['box']\n            label = item['label']\n            final_annotations.append((box[0], box[1], box[2], box[3], label))\n\n        print(\"\u26a0\ufe0f Gemini provided a correction. Applying corrections.\")\n        return final_annotations\n\n    except (json.JSONDecodeError, ValueError, KeyError) as e:\n        print(f\"\u274c Error parsing Gemini's response or response was not JSON: {e}\")\n        print(f\"Gemini's raw response was (if available): {response.text}\")\n        print(\"Falling back to YOLO bboxes with forced 'Rotifera' label due to error.\")\n        # On any error, use YOLO's boxes and force the 'Rotifera' label\n        forced_rotifera_annotations = []\n        for ann in yolo_initial_annotations:\n            forced_rotifera_annotations.append((ann[0], ann[1], ann[2], ann[3], 'Rotifera'))\n        return forced_rotifera_annotations\n    except Exception as e:\n        print(f\"An unexpected error occurred during Gemini correction: {e}\")\n        print(\"Falling back to YOLO bboxes with forced 'Rotifera' label due to unexpected error.\")\n        forced_rotifera_annotations = []\n        for ann in yolo_initial_annotations:\n            forced_rotifera_annotations.append((ann[0], ann[1], ann[2], ann[3], 'Rotifera'))\n        return forced_rotifera_annotations"
        },
        {
            "cell_type": "code",
            "execution_count": null,
            "metadata": {
                "id": "ryA86ViJ568D"
            },
            "outputs": [],
            "source": "import cv2\nimport PIL.Image\n\ndef draw_annotations_on_image(image_path, annotations, count, output_path):\n    \"\"\"Draws final bounding boxes, labels, and the total count on the image.\"\"\"\n    img = cv2.imread(image_path)\n    if img is None:\n        raise FileNotFoundError(f\"Image not found at {image_path}\")\n\n    if not img.flags['WRITEABLE']:\n        img = img.copy()\n\n    for x1, y1, x2, y2, class_name in annotations:\n        color = (0, 255, 0)\n        thickness = 2\n        font_scale = 0.7\n        font_thickness = 2\n\n        cv2.rectangle(img, (x1, y1), (x2, y2), color, thickness=thickness)\n\n        (text_width, text_height), baseline = cv2.getTextSize(class_name, cv2.FONT_HERSHEY_SIMPLEX, font_scale, font_thickness)\n\n        cv2.rectangle(img, (x1, y1 - text_height - baseline), (x1 + text_width, y1), color, -1)\n\n        cv2.putText(img, class_name, (x1, y1 - baseline), cv2.FONT_HERSHEY_SIMPLEX, font_scale, (0, 0, 0), font_thickness)\n\n    # --- NEW ADDITION: Draw the organism count on the image ---\n    count_text = f\"Count: {count}\"\n    count_position = (10, 30)  # Top-left corner\n    cv2.putText(img, count_text, count_position, cv2.FONT_HERSHEY_SIMPLEX, 1, (0, 255, 0), 2)\n    # -----------------------------------------------------------\n\n    cv2.imwrite(output_path, img)\n    return output_path\n\ndef convert_and_draw(input_webp_path, annotations, output_folder):\n    \"\"\"\n    Converts a WebP image to JPEG, draws annotations, and saves it.\n    \"\"\"\n    try:\n        img_pil = PIL.Image.open(input_webp_path).convert(\"RGB\")\n        output_jpeg_path = os.path.join(output_folder, os.path.splitext(os.path.basename(input_webp_path))[0] + \".jpg\")\n        img_pil.save(output_jpeg_path, \"JPEG\")\n        print(f\"Converted WebP image to JPEG at: {output_jpeg_path}\")\n\n        # Pass the count to the draw function\n        count = len(annotations)\n        return draw_annotations_on_image(output_jpeg_path, annotations, count, output_jpeg_path)\n\n    except Exception as e:\n        print(f\"\u274c Error during image conversion or drawing: {e}\")\n        return None"
        },
        {
            "cell_type": "code",
            "execution_count": null,
            "metadata": {
                "id": "Aog2Pn3a5-H3"
            },
            "outputs": [],
            "source": "from ultralytics import YOLO\nfrom IPython.display import Image, display\nimport os\n\n# --- MAIN SCRIPT LOGIC ---\n\n# 1. Load your trained YOLO model\nmodel = YOLO('/content/runs/detect/train/weights/best.pt')\n\n# 2. Define your input and output paths\nimage_to_predict = '/content/Mix.webp'\noutput_folder = '/content/gemini_verified_images'\nos.makedirs(output_folder, exist_ok=True)\n\nprint(f\"Loading image from: {image_to_predict}\")\nif not os.path.exists(image_to_predict):\n    print(f\"ERROR: Image file does not exist at '{image_to_predict}'. Please check the path.\")\n    exit()\n\n# 3. Run YOLO prediction to get the raw results\nprint(\"Running YOLO prediction...\")\nyolo_results = model.predict(source=image_to_predict, save=False, conf=0.25)\n\n# 4. Extract YOLO's initial detections into a standard format\nyolo_initial_annotations = []\nif yolo_results and yolo_results[0].boxes:\n    class_names = yolo_results[0].names\n    for box in yolo_results[0].boxes:\n        x1, y1, x2, y2 = map(int, box.xyxy[0].cpu().numpy())\n        label = class_names[int(box.cls[0].cpu().numpy())]\n        yolo_initial_annotations.append((x1, y1, x2, y2, label))\n\nprint(f\"\\nYOLO Initial Predictions: {[ann[4] for ann in yolo_initial_annotations]}\")\nprint(f\"Number of YOLO initial annotations: {len(yolo_initial_annotations)}\")\n\n\n# 5. Get Gemini's correction\ngemini_corrected_annotations = get_gemini_correction(image_to_predict, yolo_results)\n\n# 6. Decide which annotations to use for the final image\nif gemini_corrected_annotations:\n    final_annotations = gemini_corrected_annotations\n    print(\"Using Gemini's (potentially forced) corrected annotations.\")\nelif yolo_initial_annotations:\n    final_annotations = yolo_initial_annotations\n    print(\"Gemini returned empty or failed, falling back to YOLO's initial predictions.\")\nelse:\n    final_annotations = []\n    print(\"Neither Gemini nor YOLO produced any annotations.\")\n\n\nprint(f\"\\n--- Final Result ---\")\nprint(f\"Final Displayed Labels: {[ann[4] for ann in final_annotations]}\")\nprint(f\"Total organisms counted: {len(final_annotations)}\")\n\n# 7. Draw the final annotations on the image and display it\nif final_annotations:\n    saved_path = convert_and_draw(image_to_predict, final_annotations, output_folder)\n    if saved_path:\n        print(f\"\\nFinal image with verified labels saved to: {saved_path}\")\n        display(Image(filename=saved_path))\nelse:\n    print(\"\\nNo annotations to display. The model did not detect any objects or all processes failed.\")"
        },
        {
            "cell_type": "code",
            "execution_count": 4,
            "metadata": {
                "id": "coNpXNcB7ZYu",
                "colab": {
                    "base_uri": "https://localhost:8080/",
                    "height": 211
                },
                "outputId": "eb9585b2-5e5b-4499-d2de-a57b9e641d54"
            },
            "outputs": [
                {
                    "output_type": "error",
                    "ename": "FileNotFoundError",
                    "evalue": "[Errno 2] No such file or directory: 'Model.ipynb'",
                    "traceback": [
                        "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
                        "\u001b[0;31mFileNotFoundError\u001b[0m                         Traceback (most recent call last)",
                        "\u001b[0;32m/tmp/ipython-input-181233751.py\u001b[0m in \u001b[0;36m<cell line: 0>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      6\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      7\u001b[0m \u001b[0;31m# Read the notebook content.\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 8\u001b[0;31m \u001b[0;32mwith\u001b[0m \u001b[0mopen\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mnotebook_path\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m'r'\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mencoding\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;34m'utf-8'\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;32mas\u001b[0m \u001b[0mf\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      9\u001b[0m     \u001b[0mnotebook_content\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mnbformat\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mread\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mf\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mas_version\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;36m4\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     10\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n",
                        "\u001b[0;31mFileNotFoundError\u001b[0m: [Errno 2] No such file or directory: 'Model.ipynb'"
                    ]
                }
            ],
            "source": "import nbformat\nimport json\n\n# Path to your notebook.\nnotebook_path = \"Model.ipynb\"\n\n# Read the notebook content.\nwith open(notebook_path, 'r', encoding='utf-8') as f:\n    notebook_content = nbformat.read(f, as_version=4)\n\n# Define the output path for the JSON file.\njson_path = \"Model.json\"\n\n# Write the notebook content to a JSON file.\nwith open(json_path, 'w', encoding='utf-8') as f:\n    json.dump(notebook_content, f, indent=4)\n\nprint(f\"Successfully converted {notebook_path} to {json_path}\")"
        },
        {
            "cell_type": "code",
            "source": "",
            "metadata": {
                "id": "cFZJQqR1FK4l"
            },
            "execution_count": null,
            "outputs": []
        }
    ],
    "metadata": {
        "accelerator": "GPU",
        "colab": {
            "gpuType": "T4",
            "provenance": []
        },
        "kernelspec": {
            "display_name": "Python 3",
            "name": "python3"
        },
        "language_info": {
            "name": "python"
        }
    },
    "nbformat": 4,
    "nbformat_minor": 0
}